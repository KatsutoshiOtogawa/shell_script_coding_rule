#!/bin/bash
#
# gnu command util.

#######################################
# set alias gnu command for Mac and BSD.
# Globals:
#   GNU_ALIAS
# Arguments:
#   None
# Outputs:
#   None
# Returns:
#   0 if  set alias, non-zero on error.
# Example:
#   gnu_alias # => you use use sed
#######################################
function gnu_alias {
    for arg in "$@"; do
    case "$arg" in
      -h|--help)
        function usage() {
          cat 1>&2 << END
gnu_alias
output search engine setting

USAGE:
    gnu_alias [FLAGS] [OPTIONS]

FLAGS:
    -h, --help              Prints help information

OPTIONS:
    --debug                 Set bash debug Option
END
          unset -f usage
        }
        usage
        return
        ;;
      --debug)
        # set debug
        set -x
        trap "
          set +x
          trap - RETURN
        " RETURN
        ;;
      *)
        ;;
    esac
  done

  # you use Darwin, set alias for use Gnu sed, awk, xargs
  if uname | grep -e Darwin -e BSD > /dev/null; then
    if ! gnu_exists; then
      echo "Any Gnu command is not exists." >&2
      return 1
    fi

    function getopt {
      if uname | grep -e Open > /dev/null; then
        # openbsd
        /usr/local/bin/gnugetopt "$@"
      elif uname | grep -e Free > /dev/null; then
        # freebsd
        /usr/local/bin/getopt "$@"
      elif uname | grep -e Darwin > /dev/null; then
        # macos
        # darwin
        /usr/local/opt/gnu-getopt/bin/getopt "$@"
      fi
    }
    
    # alias not using shellscript in norepl.
    # and using function for alternative alias.
    function sed {
      gsed "$@"
    }
    function awk {
      gawk "$@"
    }
    function xargs {
      gxargs "$@"
    }
    function find {
      gfind "$@"
    }
    function date {
      gdate "$@"
    }
    function cut {
      gcut "$@"
    }
    function df {
      gdf "$@"
    }
    # alias sed=gsed
    # alias awk=gawk
    # alias xargs=gxargs
    # alias find=gfind
    # alias date=gdate
    # alias cut=gcut

    export GNU_ALIAS=yes
  fi
}

#######################################
# check exists gnu command alias gnu command for Mac and BSD.
# gsed, gawk, gxargs, gfind, ... and many
# Globals:
#   None
# Arguments:
#   None
# Outputs:
#   None
# Returns:
#   0 if exists gnu commands, non-zero on error.
# Example:
#   gnu_exists # => you use use sed
#######################################
function gnu_exists {
  # you use Darwin, set alias for use Gnu sed, awk, xargs
  if uname | grep -e Darwin -e BSD > /dev/null; then
    # gsedがなかったら、return 1

    # gnu-getopt
    if uname | grep -e Open > /dev/null; then
      # openbsd
      if ! type "/usr/local/bin/gnugetopt" > /dev/null; then
        echo "gnu-getopt is not exists." >&2
        return 1
      fi
    elif uname | grep -e Free > /dev/null; then
      # freebsd
      if ! type "/usr/local/bin/getopt" > /dev/null; then
        echo "gnu-getopt is not exists." >&2
        return 1
      fi
    elif uname | grep -e Darwin > /dev/null; then
      # macos
      # darwin
      if ! type "/usr/local/opt/gnu-getopt/bin/getopt" > /dev/null; then
        echo "gnu-getopt is not exists." >&2
        return 1
      fi
    else
      echo "unknown Unix!" >&2
      return 1
    fi

    if ! type "gsed" > /dev/null; then
      echo "gsed is not exists." >&2
      return 1
    fi
    if ! type "gawk" > /dev/null; then
      echo "gawk is not exists." >&2
      return 1
    fi
    if ! type "gxargs" > /dev/null; then
      echo "gxargs is not exists." >&2
      return 1
    fi
    if ! type "gfind" > /dev/null; then
      echo "gfind is not exists." >&2
      return 1
    fi
    if ! type "gdate" > /dev/null; then
      echo "gdate is not exists." >&2
      return 1
    fi
    if ! type "gcut" > /dev/null; then
      echo "gcut is not exists." >&2
      return 1
    fi
  fi
}

#######################################
# unalias gnu command for Mac.
# Globals:
#   GNU_ALIAS
# Arguments:
#   None
# Outputs:
#   None
# Returns:
#   0 if thing was deleted, non-zero on error.
# Example:
#   gnu_unalias # => you use use sed
#######################################
function gnu_unalias {
  # you use Darwin, set alias for use Gnu sed, awk, xargs
  if uname | grep -e Darwin -e BSD > /dev/null; then
    unset -f getopt
    unset -f sed
    unset -f awk
    unset -f xargs
    unset -f find
    unset -f date
    unset -f cut
    # unalias sed
    # unalias awk
    # unalias xargs
    # unalias find
    # unalias date
    # unalias cut
    unset GNU_ALIAS
  fi
}
